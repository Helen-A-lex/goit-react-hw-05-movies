{"version":3,"file":"static/js/186.ec18678f.chunk.js","mappings":"8QAKe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACEP,GAAa,GACbE,EAAS,MAFX,mBAI8BM,EAAAA,EAAAA,IAAgBH,GAJ9C,gBAIYI,EAJZ,EAIYA,QACRL,EAAWK,GALf,kDAOuB,iBAAf,KAAMC,MACRR,EAAS,uDARf,yBAWIF,GAAa,GAXjB,8EADc,uBAAC,WAAD,wBAedW,EACD,GAAE,CAACN,KAGF,+BACGN,GACC,SAAC,IAAD,UAAS,gBAET,wBACGI,EAAQS,OAAS,EAChBT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,0BAAG,uBAAG,YAAW,IAAED,MACnB,uBAAIC,MAFGF,EADC,KAOZ,SAAC,IAAD,UAAS,+CAIdb,IAAS,SAAC,IAAD,UAAUA,MAGzB,C,mMCjDDgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAU,qBADA,cAC3BE,EAD2B,OAEjCC,QAAQC,IAAIF,EAASG,MAFY,kBAG1BH,EAASG,MAHiB,2CAAH,qDAMnBC,EAAc,mCAAG,gGAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,UAAjB,SACLR,EAAAA,EAAAA,IAAA,6BAAgCO,GAAU,CAC/DE,OAAQD,EAAUC,SAFQ,cACtBP,EADsB,OAI5BC,QAAQC,IAAIF,EAASG,MAJO,kBAKrBH,EAASG,MALY,2CAAH,sDAQdK,EAAe,mCAAG,WAAMb,GAAN,uFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,IADb,cACvBK,EADuB,OAE7BC,QAAQC,IAAIF,EAASG,MAFQ,kBAGtBH,EAASG,MAHa,2CAAH,sDAMfM,EAAY,mCAAG,WAAMd,GAAN,uFACHG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADG,cACpBK,EADoB,OAE1BC,QAAQC,IAAIF,EAASG,MAFK,kBAGnBH,EAASG,MAHU,2CAAH,sDAMZd,EAAe,mCAAG,WAAMM,GAAN,uFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADM,cACvBK,EADuB,OAE7BC,QAAQC,IAAIF,EAASG,MAFQ,kBAGtBH,EAASG,MAHa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/api';\nimport { Message } from 'components/Message/Message';\n\nexport default function Reviews() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError('Oops! Something went wrong! Try reloading the page!');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Message>Loading...</Message>\n      ) : (\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p><b>Author:</b> {author}</p>\n                <p>{content}</p>\n              </li>\n            ))\n          ) : (\n            <Message>We don't have any reviews for this movie</Message>\n          )}\n        </ul>\n      )}\n      {error && <Message>{error}</Message>}\n    </section>\n  );\n}\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYzJiYzk4YjBmNGM1MTljMmM4ZjMxYjVhMWE0NGRkZCIsInN1YiI6IjY0OGIzNDJlYzNjODkxMDBjYWQ4ZGM0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xrcQGy2ZuGrw3crATjA8svfxv_fCYC-U79xsPE_C8Mg';\n\nexport const getAllTrendingMovie = async () => {\n  const response = await axios.get('trending/all/day?');\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getSearchMovie = async ({ search, abortCtrl }) => {\n  const response = await axios.get(`search/movie?query=${search}`, {\n    signal: abortCtrl.signal,\n  });\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  console.log(response.data);\n  return response.data;\n};\n"],"names":["Reviews","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","results","code","getReviews","length","map","id","author","content","axios","getAllTrendingMovie","response","console","log","data","getSearchMovie","search","abortCtrl","signal","getMovieDetails","getMovieCast"],"sourceRoot":""}