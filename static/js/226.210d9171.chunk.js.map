{"version":3,"file":"static/js/226.210d9171.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/AdditionalInformation/AdditionalInformation.styled.js","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid black;\n`;\nexport const ListInfo = styled.ul`\n  margin: 0;\n  padding: 0;\n  padding-left: 15px;\n  list-style: none;\n  margin-bottom: 8px;\n`;\n","import { ListInfo, Wrapper } from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\nimport imagePlaceholder from '../../image-placeholder/img-placeholder.png';\nexport const MovieInfo = ({ movie }) => {\n  return (\n    <Wrapper>\n      <img\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n            : imagePlaceholder\n        }\n        alt={movie.original_title}\n        width=\"200\"\n      />\n      <ListInfo>\n        <li>\n          <h1>\n            {movie.original_title} ({movie.releaseYear})\n          </h1>\n          <p>User Score: {movie.votePercentage}%</p>\n        </li>\n        <li>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n        </li>\n        <li>\n          <h2>Genres</h2>\n          <p>{movie.genres}</p>\n        </li>\n      </ListInfo>\n    </Wrapper>\n  );\n};\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    releaseYear: PropTypes.string,\n    votePercentage: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  border-bottom: 1px solid black;\n`;\n","import { Outlet, Link } from 'react-router-dom';\nimport { Section } from './AdditionalInformation.styled';\nimport { Suspense } from 'react';\nexport const AdditionalInformation = () => {\n  return (\n    <>\n      <Section>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </Section>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { getMovieDetails } from '../services/api';\nimport {  Link, useLocation, useParams } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Message } from 'components/Message/Message';\nimport { AdditionalInformation } from 'components/AdditionalInformation/AdditionalInformation';\nimport { TiArrowLeftThick } from \"react-icons/ti\";\nexport default function MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/\")\n  \n  useEffect(() => {\n    async function loadMovieDetails() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const {\n          genres,\n          original_title,\n          overview,\n          poster_path,\n          release_date,\n          vote_average,\n        } = await getMovieDetails(movieId);\n        const releaseYear = release_date.slice(0, 4);\n        const votePercentage = Math.round(vote_average * 10);\n\n        setMovie({\n          genres: genres.map(genre => genre.name).join(' '),\n          original_title,\n          overview,\n          poster_path,\n          releaseYear,\n          votePercentage,\n        });\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError('Oops! Something went wrong! Try reloading the page!');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}><button><TiArrowLeftThick/> Go back</button></Link>\n      {isLoading ? <Message>Loading...</Message> : <MovieInfo movie={movie} />}\n      {error && <Message>{error}</Message>}\n      <AdditionalInformation/>\n    </>\n  );\n}\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYzJiYzk4YjBmNGM1MTljMmM4ZjMxYjVhMWE0NGRkZCIsInN1YiI6IjY0OGIzNDJlYzNjODkxMDBjYWQ4ZGM0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xrcQGy2ZuGrw3crATjA8svfxv_fCYC-U79xsPE_C8Mg';\n\nexport const getAllTrendingMovie = async () => {\n  const response = await axios.get('trending/all/day?');\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getSearchMovie = async ({ search, abortCtrl }) => {\n  const response = await axios.get(`search/movie?query=${search}`, {\n    signal: abortCtrl.signal,\n  });\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  console.log(response.data);\n  return response.data;\n};\n"],"names":["Wrapper","styled","ListInfo","MovieInfo","movie","src","poster_path","imagePlaceholder","alt","original_title","width","releaseYear","votePercentage","overview","genres","Section","AdditionalInformation","to","Suspense","fallback","MovieDetails","useState","isLoading","setIsLoading","error","setError","setMovie","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieDetails","release_date","vote_average","slice","Math","round","map","genre","name","join","code","loadMovieDetails","current","Message","axios","getAllTrendingMovie","response","console","log","data","getSearchMovie","search","abortCtrl","signal","id","getMovieCast","getMovieReviews"],"sourceRoot":""}